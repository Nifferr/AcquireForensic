#!/usr/bin/env bash
# framework with many functions to create a detailed report and generate a image

### Colors ##
ESC=$(printf '\033') RESET="${ESC}[0m" BLACK="${ESC}[30m" RED="${ESC}[31m"
GREEN="${ESC}[32m" YELLOW="${ESC}[33m" BLUE="${ESC}[34m" MAGENTA="${ESC}[35m"
CYAN="${ESC}[36m" WHITE="${ESC}[37m" DEFAULT="${ESC}[39m"

### Color Functions ##
greenprint() { printf "${GREEN}%s${RESET}\n" "$1"; }
blueprint() { printf "${BLUE}%s${RESET}\n" "$1"; }
redprint() { printf "${RED}%s${RESET}\n" "$1"; }
yellowprint() { printf "${YELLOW}%s${RESET}\n" "$1"; }
magentaprint() { printf "${MAGENTA}%s${RESET}\n" "$1"; }
cyanprint() { printf "${CYAN}%s${RESET}\n" "$1"; }
fn_goodafternoon() { echo; echo "Good afternoon."; }
fn_goodmorning() { echo; echo "Good morning."; }
fn_bye() { echo "Bye bye."; exit 0; }
fn_fail() { echo "Wrong option." exit 1; }

sub-submenu() {
    echo -ne "
$(yellowprint 'SUB-SUBMENU')
$(greenprint '1)') GOOD MORNING
$(greenprint '2)') GOOD AFTERNOON
$(blueprint '3)') Go Back to SUBMENU
$(magentaprint '4)') Go Back to MAIN MENU
$(redprint '0)') Exit
Choose an option:  "
    read -r ans
    case $ans in
    1)
        fn_goodmorning
        sub-submenu
        ;;
    2)
        fn_goodafternoon
        sub-submenu
        ;;
    3)
        submenu
        ;;
    4)
        mainmenu
        ;;
    0)
        fn_bye
        ;;
    *)
        fn_fail
        ;;
    esac
}

submenu() {
    echo -ne "
$(blueprint 'CMD1 SUBMENU')
$(greenprint '1)') Acquisition information
$(magentaprint '2)') Go Back to Main Menu
$(redprint '0)') Exit
Choose an option:  "
    read -r ans
    case $ans in
    1)
        sub-submenu
        submenu
        ;;
    2)
        menu
        ;;
    0)
        fn_bye
        ;;
    *)
        fn_fail
        ;;
    esac
}

mainmenu() {
    echo -ne "
$(magentaprint 'MAIN MENU')
$(greenprint '1)') Acquire evidence
$(redprint '0)') Exit
Choose an option:  "
    read -r ans
    case $ans in
    1)
        submenu
        mainmenu
        ;;
    0)
        fn_bye
        ;;
    *)
        fn_fail
        ;;
    esac
}

mainmenu



curr_date=`date +"%A, %B %d, %Y"`
curr_time=`date +"%H:%M"`
timezone_host=`date +"%:::z %Z"`
host_type=`dmidecode -t 3 | grep Type | awk '{print $2}'`
host_manufacturer=`dmidecode -s system-manufacturer`
host_product_name=`dmidecode -s baseboard-product-name`
host_version=`dmidecode -s system-version`
host_serial_number=`dmidecode -s system-serial-number`
host_system_family=`dmidecode -s system-family`
host_bios_vendor=`dmidecode -s bios-vendor`
bios_date=`date +"%A, %B %d, %Y"`
bios_date_formated=`date +"%4Y-%m-%d"`
bios_time=`date +"%H:%M"`
host_timeZone=`date +"%:::z %Z"`
datetime_host=`date +"%4Y-%m-%d %H:%M %:::z %Z"`
datetime_utc0=`date -u +"%4Y-%m-%d %H:%M %:::z %Z"`
#host information
echo "Host Type: $host_type" 
echo "Host Manufacturer: $host_manufacturer" 
echo "Host Product Name: $host_product_name" 
echo "Host Tag: $host_tag" 
echo "Host Version: $host_version" 
echo "Host Serial Number: $host_serial_number" 
echo "BIOS Date: $bios_date" 
echo "BIOS Time: $bios_time" 
echo "Host Date/Time/Time Zone: $host_time" 
echo
echo "Do you need change any information?"
echo
echo

evid_dev="sda"
evid_dev_model=`hdparm -I /dev/$evid_dev 2>/dev/null | grep -i 'Model Number' | awk '{print $3" "$4" "$5" "$6}'`
evid_dev_serial=`hdparm -I /dev/$evid_dev 2>/dev/null | grep -i 'Serial Number' | awk '{print $3" "$4" "$5" "$6}'`
evid_dev_firmware=`hdparm -I /dev/$evid_dev 2>/dev/null | grep -i 'Firmware Revision' | awk '{print $3" "$4" "$5" "$6}'`
LBASectors=`hdparm -g /dev/$evid_dev | awk -F'[=,]' '{print $4}'`
evid_sectors=`echo $LBASectors | awk '{print $1}'`
evid_bytes=`fdisk -l -u /dev/$evid_dev | grep $evid_dev | grep bytes | awk '{print $5}'`
evid_size=`fdisk -l -u /dev/$evid_dev | grep Disk | grep $evid_dev | awk -F ',' '{ print $1}' | awk '{print $3$4}'`
evid_part_count=`fdisk -l -u /dev/$evid_dev | grep $evid_dev | grep -v Disk | wc -l`
evid_part1_field2=`fdisk -l -u /dev/$evid_dev | grep -A1 Device | grep $evid_dev'1' | awk '{print $2}'`
evid_part1_field3=`fdisk -l -u /dev/$evid_dev | grep -A1 Device | grep $evid_dev'1' | awk '{print $3}'`
evid_part2_field2=`fdisk -l -u /dev/$evid_dev | grep -A2 Device | grep $evid_dev'2' | awk '{print $2}'`
evid_part2_field3=`fdisk -l -u /dev/$evid_dev | grep -A2 Device | grep $evid_dev'2' | awk '{print $3}'`
#evidence information
echo "Evidence mount point: /dev/$evid_dev" 
echo "Evidence device model: $evid_dev_model" 
echo "Evidence device serial: $evid_dev_serial" 
echo "Evidence device firmware: $evid_dev_firmware" 
echo "Evidence device sectors: $evid_dev_sectors" 
echo "Evidence device bytes: $evid_dev_bytes" 
echo "Evidence device size: $evid_dev_size" 
echo "Sector LBA: $LBASectors sectors"

tgt_dev="sda"
tgt_dev_model=`hdparm -I /dev/$tgt_dev | grep -i 'Model Number' | awk '{print $3" "$4" "$5" "$6}'`
tgt_dev_serial=`hdparm -I /dev/$tgt_dev | grep -i 'Serial Number' | awk '{print $3" "$4" "$5" "$6}'`
tgt_dev_firmware=`hdparm -I /dev/$tgt_dev | grep -i 'Firmware Revision' | awk '{print $3" "$4" "$5" "$6}'`
tgt_act_mnt=`df -h -P | grep $tgt_mnt | awk {'print $6'}`
tgt_scsi_vendor=`cat /proc/scsi/scsi | grep -A 1 "scsi$tgt_dev_id" | grep "Vendor" | awk -F ':' '{print $2}'`
tgt_scsi_model=`cat /proc/scsi/scsi | grep -A 1 "scsi$tgt_dev_id" | grep "Vendor" | awk -F ':' '{print $3}' | awk -F 'Rev' '{print $1}'`
tgt_scsi_serial=`lshw -C Disk | grep -A 3 "/dev/$tgt_dev" | grep 'serial' | awk '{print $2}'`
tgt_size=`fdisk -l -u /dev/$tgt_dev | grep Disk | grep $tgt_dev | awk -F ',' '{ print $1}' | awk '{print $3$4}'`
tgt_free=`df -h -P | grep $tgt_mnt | awk {'print $4'}`
#target information


bkup_dev="sda"
bkup_dev_model=`hdparm -I /dev/$bkup_dev | grep -i 'Model Number' | awk '{print $3" "$4" "$5" "$6}'`
bkup_dev_serial=`hdparm -I /dev/$bkup_dev | grep -i 'Serial Number' | awk '{print $3" "$4" "$5" "$6}'`
bkup_dev_firmware=`hdparm -I /dev/$bkup_dev | grep -i 'Firmware Revision' | awk '{print $3" "$4" "$5" "$6}'`
bkup_act_mnt=`df -h -P | grep $bkup_mnt | awk {'print $6'}`
bkup_scsi_vendor=`cat /proc/scsi/scsi | grep -A 1 "scsi$bkup_dev_id" | grep "Vendor" | awk -F ':' '{print $2}'`
bkup_scsi_model=`cat /proc/scsi/scsi | grep -A 1 "scsi$bkup_dev_id" | grep "Vendor" | awk -F ':' '{print $3}' | awk -F 'Rev' '{print $1}'`
bkup_scsi_serial=`lshw -C Disk | grep -A 3 "/dev/$bkup_dev" | grep 'serial' | awk '{print $2}'`
bkup_size=`fdisk -l -u /dev/$bkup_dev | grep Disk | grep $bkup_dev | awk -F ',' '{ print $1}' | awk '{print $3$4}'`
bkup_free=`df -h -P | grep $bkup_mnt | awk {'print $4'}`
#backup information

#image_start_date=`date +"%A, %B %d, %Y"`
#image_start_time=`date +"%H:%M"`
#image_end_date=`ls -l -t $tgt_mnt/$evid_code/*.E* | head -1 | awk {'print $7'}`
#image_end_time=`ls -l -t $tgt_mnt/$evid_code/*.E* | head -1 | awk {'print $8'}`
#evid_hash=`cat $tgt_mnt/$evid_code/$evid_code.E01.txt | grep -i -A1 md5 | grep -i md5 | awk '{print $3}' | head -n1`
#tgt_hash=`cat $tgt_mnt/$evid_code/$evid_code.E01.txt | grep -i -A1 md5 | grep -i md5 | awk '{print $3"\t"$5}' | tail -n1`
#tgt_bytes=`cat $auditfile | grep copied | awk '{print $1}'`
#tgt_sectors=`cat $auditfile | grep -A1 results | grep -A1 $tgt_mnt| grep sectors | awk '{print $1}'`
#evid_count=`find /mnt/evidence -type f -print | wc -l`
#tgt_count=`find /mnt/target_image -type f -print | wc -l`
#evid_count2=`find /mnt/evidence2 -type f -print | wc -l`
#tgt_count2=`find /mnt/target_image2 -type f -print | wc -l`
#image_start_date=`date +"%A, %B %d, %Y"`
#image_start_time=`date +"%H:%M"`
#image_end_date=`ls -l -t $tgt_mnt/$evid_code/*.E* | head -1 | awk {'print $7'}`
#image_end_time=`ls -l -t $tgt_mnt/$evid_code/*.E* | head -1 | awk {'print $8'}`
#copy_date=`date +"%A, %B %d, %Y"`
#copy_time=`date +"%H:%M"`
#evid_hash=`cat $tgt_mnt/$evid_code/$evid_code.E01.txt | grep -i -A1 md5 | grep -i md5 | awk '{print $3}' | head -n1`
#tgt_hash=`cat $tgt_mnt/$evid_code/$evid_code.E01.txt | grep -i -A1 md5 | grep -i md5 | awk '{print $3}' | tail -n1`
#bkup_hash=`ewfinfo $bkup_mnt/$evid_code/$evid_code.E01 | grep -i -A1 md5 | awk '{print $2}' | head -n1`
#tgt_bytes=`cat $auditfile | grep copied | awk '{print $1}'`
#bkup_bytes=`cat $auditfile | grep copied | awk '{print $1}'`
tgt_sectors=`cat $auditfile | grep -A1 results | grep -A1 $tgt_mnt| grep sectors | awk '{print $1}'`
bkup_sectors=`cat $auditfile | grep -A1 results | grep -A1 $bkup_mnt| grep sectors | awk '{print $1}'`
evid_count=`find /mnt/evidence -type f -print | wc -l`
tgt_count=`find /mnt/target_image -type f -print | wc -l`
bkup_count=`find /mnt/target_image -type f -print | wc -l`
evid_count2=`find /mnt/evidence2 -type f -print | wc -l`
tgt_count2=`find /mnt/target_image2 -type f -print | wc -l`
bkup_count2=`find /mnt/target_image2 -type f -print | wc -l`
copy_date=`date +"%A, %B %d, %Y"`
copy_time=`date +"%H:%M"`
#image information

#report information
echo "Forensic Examiner Name: $firstname $lastname"
echo "Project Name: $proj_name"
echo "Engagement Code: $eng_code"
echo "Custodian Name: $custodianFN $custodianLN"
echo "Current Date:" $curr_date
echo "Current Time:" $curr_time
echo "Specific Place of Acquisition: $specific_location - $city, $state, $country"
echo "Timezone:  `date +'%:::z %Z'`"



